spring.application.name=score-calculator
server.port=8200

spring.profiles.active=dev
spring.cloud.config.profile=dev

# commented out for docker
#spring.config.import=optional:configserver:http://localhost:8888

spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enabled=true
spring.jpa.defer-datasource-initialization=true

#spring.cloud.config.name=

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

resilience4j.retry.instances.default.waitDuration=1s
resilience4j.retry.instances.default.enableExponentialBackoff=true

resilience4j.circuitbreaker.instances.default.failureRateThreshold=90

#feign.hystrix.enabled=true  ==> this is for old hystrix version
feign.circuitbreaker.enabled=true

spring.sleuth.sampler.probability=1.0
spring.zipkin.sender.type=kafka
spring.kafka.bootstrap-servers=localhost:19092

request.name.regex.pattern=/^[A-Za-z\x{00C0}-\x{00FF}][A-Za-z\x{00C0}-\x{00FF}\'\-]+([\ A-Za-z\x{00C0}-\x{00FF}][A-Za-z\x{00C0}-\x{00FF}\'\-]+)*/u
request.phone-number.regex.pattern=^(\\+\\d{1,3}( )?)?((\\(\\d{3}\\))|\\d{3})[- .]?\\d{3}[- .]?\\d{4}$|^(\\+\\d{1,3}( )?)?(\\d{3}[ ]?){2}\\d{3}$|^(\\+\\d{1,3}( )?)?(\\d{3}[ ]?)(\\d{2}[ ]?){2}\\d{2}$
